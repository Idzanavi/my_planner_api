openapi: 3.0.3
info:
  title: My Planner
  version: 1.0.0
  description: |-
    Manage Planner items and additional features
paths:
  /api/token/:
    post:
      summary: Get access tokens
      tags:
        - Login
      description: >-
        Get authorization tokens to access the application
      operationId: token
      parameters:
        - name: username
          in: body
          required: true
          description: The username of user
          schema:
            type: string
          example: user
        - name: password
          in: body
          required: true
          description: The password of user
          schema:
            type: string
          example: 12345
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                refresh: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4NjM4ODE4NiwiaWF0IjoxNjg2MzAxNzg2LCJqdGkiOiJiMmE3ODg0ZjljNTM0MmYyOTZmM2MyOTZiNjU1YTYyZiIsInVzZXJfaWQiOjN9.YXQmJEJL8Wu4BcDtqtqgKfmC2TC_4aeKeN5Dws8eRlM"
                access: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjg2MzMxNzg2LCJpYXQiOjE2ODYzMDE3ODYsImp0aSI6ImM5ODAzNjMyM2VhZDRjNjBiNjY3MTI2Njk0ODNjZDk3IiwidXNlcl9pZCI6M30.ooZZETZI7NDQCKUNkANzIfmFesmmHbQOfwBauvhfL_8"
        '400':
          description: Bad request
          content:
            application/json:
              example:
                username: "The field is required"
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                detail: "No active accound found with the given credentials"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "user1"
                password:
                  type: string
                  example: "12345"
  /api/token/refresh:
    post:
      summary: Refresh access tokens
      tags:
        - Login
      description: >-
        Get new tokens when access token was outdated
      operationId: refreshToken
      parameters:
        - name: refresh
          in: body
          required: true
          description: Current refresh token
          schema:
            type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4NjM4ODE4NiwiaWF0IjoxNjg2MzAxNzg2LCJqdGkiOiJiMmE3ODg0ZjljNTM0MmYyOTZmM2MyOTZiNjU1YTYyZiIsInVzZXJfaWQiOjN9.YXQmJEJL8Wu4BcDtqtqgKfmC2TC_4aeKeN5Dws8eRlM
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                refresh: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4NjM4ODE4NiwiaWF0IjoxNjg2MzAxNzg2LCJqdGkiOiJiMmE3ODg0ZjljNTM0MmYyOTZmM2MyOTZiNjU1YTYyZiIsInVzZXJfaWQiOjN9.YXQmJEJL8Wu4BcDtqtqgKfmC2TC_4aeKeN5Dws8eRlM"
                access: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjg2MzMxNzg2LCJpYXQiOjE2ODYzMDE3ODYsImp0aSI6ImM5ODAzNjMyM2VhZDRjNjBiNjY3MTI2Njk0ODNjZDk3IiwidXNlcl9pZCI6M30.ooZZETZI7NDQCKUNkANzIfmFesmmHbQOfwBauvhfL_8"
        '400':
          description: Bad request
          content:
            application/json:
              example:
                refresh: ["This field is required."]
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                detail: "Token is invalid or expired"
                code: "token_not_valid"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4NjM4ODE4NiwiaWF0IjoxNjg2MzAxNzg2LCJqdGkiOiJiMmE3ODg0ZjljNTM0MmYyOTZmM2MyOTZiNjU1YTYyZiIsInVzZXJfaWQiOjN9.YXQmJEJL8Wu4BcDtqtqgKfmC2TC_4aeKeN5Dws8eRlM
  /api/register/:
    post:
      summary: Register new user
      tags:
        - Registration
      description: >-
        Register new user with given credentials
      operationId: register
      parameters:
        - name: username
          in: body
          required: true
          description: Username of new user
          schema:
            type: string
          example: test_user
        - name: email
          in: body
          required: true
          description: Email of new user
          schema:
            type: string
          example: user@test.com
        - name: password
          in: body
          required: true
          description: Password of new user
          schema:
            type: string
          example: 12345
        - name: password2
          in: body
          required: true
          description: Repeat password of new user
          schema:
            type: string
          example: 12345
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                username: test_user
                email: user@test.com
        '400':
          description: Bad request
          content:
            application/json:
              example:
                password: ["The field is reuired."]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: test_user
                email:
                  type: string
                  example: test_user
                password:
                  type: string
                  example: test_user
                password2:
                  type: string
                  example: test_user
  /api/user/:
    get:
      summary: Get information about user (self)
      tags:
        - User
      description: >-
        Get information about own profile
      operationId: getUserInfo
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                pk: 3
                username: "test123"
                email: "test123@test.com"
                first_name: "Joe"
                last_name: "Doe"
                birthdate: "01-01-2001"
                gender: 1
                is_staff: false
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                detail: ["Authentification credentials were not provided."]
  /api/user/{id}/:
    get:
      summary: Get information about user
      tags:
        - User
      description: >-
        Get information about any profile
      operationId: getOwnUserInfo
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                pk: 3
                username: "test123"
                email: "test123@test.com"
                first_name: "Joe"
                last_name: "Doe"
                birthdate: "01-01-2001"
                gender: 1
                is_staff: false
        '401':
          description: Unauthorized
          content:
            application/json:
              example:
                detail: ["Authentification credentials were not provided."]
        '404':
          description: Not Found
          content:
            application/json:
              example:
                detail: ["Not found."]



